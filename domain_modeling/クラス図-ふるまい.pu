@startuml
title playing game

package domain <<Frame>> {

    abstract class "エンティティ" as Entity {
        x: int
        y: int
        vx: int
        vy: int

    }

    abstract class "弾" as Bullet extends Entity{
        attack: int

        vanish()
    }


    class "自機弾" as MyBullet extends Bullet {
        +vanish()
    }

    class "敵機弾" as EnemyBullet extends Bullet {
        +vanish()
    }

    abstract class "機体" as Aircraft extends Entity {

        hit()
    }

    class "自機" as MyAircraft extends Aircraft {
        remain: int
        result: Result

        +hit()
        +isGameover()
        +fire()
    }

    class "結果" as Result {
        score: int
        playerName: String
    }

    MyAircraft *-- Result

    class "敵機" as EnemyAircraft extends Aircraft {
        hp: int
        point: int

        +hit()
        +vanish()
        +fire()
    }
    
    abstract class "弾ファクトリー" as BulletFactory {
        +create()
        +{abstract} Bullet createBullet()
        +{abstract} void registerBullet()
    }
    MyAircraft *-- BulletFactory
}

package controller <<Frame>> {
    class "ゲーム管理" as Administrator {
        myAircraft: MyAircraft
        enemyAircrafts: List<EnemyAircraft>
        myBullets: List<MyBullet>
        enemyBullets: List<EnemyBullet>

        move()
    }


    BulletFactory --> Bullet : Creates

    Class "PIXISpriteファクトリー" as PixiSpriteFactory {
        +void addChildSprite(Sprite)
        +void removeChildSprite(Sprite)
    }

    Class "自機弾ファクトリー" as MyBulletFactory extends BulletFactory{
        +MyBullet createBullet()
        +void registerBullet()
    }

    MyBulletFactory --> MyBullet : Creates

    Class "敵機弾ファクトリー" as EnemyBulletFactory extends BulletFactory{
        +EnemyBullet createBullet()
        +void registerBullet()
    }

    MyBulletFactory *-- PixiSpriteFactory
    EnemyBulletFactory *-- PixiSpriteFactory

    EnemyBulletFactory --> EnemyBullet : Creates

    Class "自機ビュー" as MyAircraftView {

    }
    MyAircraftView *-- MyAircraft

}

package infra <<Frame>> {
    class "キーボード管理" as KeyboardManager {
        keyboard: Keyboard
    }

    class "キーボード" as Keyboard {

    }

}

Administrator *-- domain


@enduml